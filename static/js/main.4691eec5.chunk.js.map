{"version":3,"sources":["components/card/card.component.tsx","components/card-list/card-list.component.tsx","components/search-box/search-box.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","card","className","alt","name","src","id","email","CardList","cardList","map","c","SearchBox","placeholder","handleChange","type","onChange","App","props","componentDidMount","axios","get","then","res","undefined","data","setState","users","e","console","log","search","target","value","state","this","filteredUsers","filter","u","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAmBaA,G,MAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAMC,IAAG,sCAA0BJ,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMK,GAAhC,eACzB,8CAAUL,QAAV,IAAUA,OAAV,EAAUA,EAAMG,QAChB,+CAAWH,QAAX,IAAWA,OAAX,EAAWA,EAAMM,cCFVC,G,MAAsC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpD,OACE,qBAAKP,UAAU,oBAAf,gBACGO,QADH,IACGA,OADH,EACGA,EAAUC,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAiBV,KAAMU,GAAZA,EAAEL,WClBRM,G,MAA8B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACzD,OACE,qBAAKZ,UAAU,SAAf,SACE,uBACEA,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCgDHG,E,kDAjDb,WAAYC,GAAgB,IAAD,8BACzB,cAAMA,IAORC,kBAAoB,WAClBC,IAAMC,IAAI,8CAA8CC,MACtD,SAACC,QACkBC,IAAbD,EAAIE,MAAmC,OAAbF,EAAIE,MAChC,EAAKC,SAAS,CACZC,MAAOJ,EAAIE,UAIjB,SAACG,GACCC,QAAQC,IAAI,gBACZD,QAAQC,IAAIF,OAnBS,EA0C3Bd,aAAe,SAACc,GACd,EAAKF,SAAS,CACZK,OAAQH,EAAEI,OAAOC,SAzCnB,EAAKC,MAAQ,CACXH,OAAQ,IAJe,E,qDAwBJ,IAAD,EACMI,KAAKD,MAAvBP,EADY,EACZA,MAAOI,EADK,EACLA,OACTK,EAAa,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAOU,QAAO,SAACC,GAAD,OAClCA,EAAElC,KAAKmC,cAAcC,SAAST,EAAOQ,kBAGvC,OACE,sBAAKrC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oCACA,cAAC,EAAD,CACEW,YAAY,eACZC,aAAcqB,KAAKrB,eAErB,cAAC,EAAD,CAAUL,SAAU2B,W,GAtCVK,aCCHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4691eec5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.style.scss\";\n\nclass User {\n  id: number;\n  name: string;\n  email: string;\n\n  constructor(id: number, name: string, email: string) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n  }\n}\n\ninterface ICard {\n  card?: User;\n}\n\nexport const Card: React.FC<ICard> = ({ card }) => {\n  return (\n    <div className=\"card-container\">\n      <img alt={card?.name} src={`https://robohash.org/${card?.id}?set=set2`} />\n      <p>Name: {card?.name}</p>\n      <p>Email: {card?.email}</p>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.style.scss\";\n\nclass User {\n  id: number;\n  name: string;\n  email: string;\n\n  constructor(id: number, name: string, email: string) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n  }\n}\n\ninterface IProps {\n  cardList?: User[];\n}\n\ninterface IState {}\n\nexport const CardList: FunctionComponent<IProps> = ({ cardList }) => {\n  return (\n    <div className=\"card-list-wrapper\">\n      {cardList?.map((c) => (\n        <Card key={c.id} card={c} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.style.scss\";\n\ninterface IProps {\n  placeholder: string;\n  handleChange: React.ChangeEventHandler;\n}\n\nexport const SearchBox: React.FC<IProps> = ({ placeholder, handleChange }) => {\n  return (\n    <div className=\"center\">\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { User } from \"./models/User\";\n\ninterface IProps {}\n\ninterface IState {\n  users?: User[];\n  search: string;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(\n      (res) => {\n        if (res.data !== undefined || res.data !== null) {\n          this.setState({\n            users: res.data,\n          });\n        }\n      },\n      (e) => {\n        console.log(\"axios failed\");\n        console.log(e);\n      }\n    );\n  };\n\n  render(): JSX.Element {\n    const { users, search } = this.state;\n    const filteredUsers = users?.filter((u) =>\n      u.name.toLowerCase().includes(search.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">React Typescript App 1</h1>\n        <SearchBox\n          placeholder=\"Search Users\"\n          handleChange={this.handleChange}\n        />\n        <CardList cardList={filteredUsers} />\n      </div>\n    );\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      search: e.target.value,\n    });\n  };\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}